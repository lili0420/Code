一、Numpy支持运算，也支持多种数据类型
二、ndarry对象是Numpy模块的基础对象，用于存放同类型元素的多维数组
#使用array()函数创建一个ndarray时，需要将python列表作为参数，而列表中的元素即是ndarray的元素

import numpy as np
1.a=np.array([1,2,3,4,5])
print('数组内容为:',a)
print('数组类型为:',a.dtype)
print("数组的形状为:',a.shape)
print('数组的维数为:',a.ndim)
print('数组的长度为:',a.size)

三、Numpy模块中数组的基本操作
(一）.内置的数组创建方法
zeros()、ones()
(1)zeros：创建一个通过shape参数指定数组形状与元素均为0的数组
a=np.zeros(4)
print(a)
(2)ones():创建元素全部为1的数组

2.arange()函数、linspace()函数
创建指定数值范围的一维数组，需要通过指定起始值、终止值与步长
**区别：arange()函数不包含终止值，而linspace()函数包含终止值
a=np.arange(0,10,1)   创建数值为0~10的数组步长为1
print('数组内容为：',a))

a=np.linspace(0,1,10)
print(a)

3.logspce()函数
创建等比数列
a=np.logspace(0,9,10)
print(a)

4.eye()函数
用于生成对角线为1，其他元素为0的数组。类似于对角矩阵
a=np.eye(3)
print(a)

5.diag()函数
与eye()函数相似，可以指定对角线中的元素，可以是0或其他值，对角线以外的其他元素均为0
a=np.diag([1,2,3,4,5])
print(a)

（二）、生成随机数
1.rand()函数：用于生成一个任意维数的数组
a=np.random.rand(2,3,2)
print(a)

2.randint()函数：用于生成指定范围的随机数
a=np.random.randint(2,10,size=（2，2，3))
print(a)

3.random()函数：创建一个随机数组
a=np.random.random(5)
print(a)

（三）、切片和索引
与python中列表（list)的切片操作相同

（四）、修改数组形状
1.改变数组维度
reshape()函数
b=a.reshape(3,3)
print(b)

2.展平数组元素
ravel()函数
'C':按行，‘F’：按列，‘A’：按原顺序，‘K’：在内存中的出现顺序

（五）、组合数组
1.hstack()函数：实现水平堆叠序列中的数组
vstack()函数：实现垂直堆叠序列中的数组

2.concatenate()函数：用于实现沿着指定轴连接相同形状的两个或多个数组

（六）、数组分割
1.hsplit(）函数
水平分割成多个子数组

2.vsplit()函数
垂直分割进行数组分割

3.split(）函数
实现沿着特定的轴将原数组分割为多个子数组
